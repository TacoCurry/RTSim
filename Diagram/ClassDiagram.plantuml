@startuml simulator

/'<System>'/

class System <<Abstract>>
class System{
    +{field} name: String
    +{field} desc: String
    +{field} CPU: CPU
    +{field} memories: Memories
    +{field} time: int
    +{field} end_sim_time: int
    +{field} verbose: int
    +{field} tasks: Task[]
    +{field} wait_period_queue: Task[]
    +{field} queue: Task[]

    +{method} run(void): void
    +{method} is_schedule(Task): bool
    +{method} check_queued_tasks(): bool
    +{method}{abstract} assign_task(Task): bool
    +{method}{abstract} reassign_task(Task): bool
}

System o- CPU
System o- Memories
System <|-- Sys_DRAM
System <|-- Sys_DVFS_DRAM
System <|-- Sys_DVFS_HM
System <|-- Sys_HM

/'<CPU>'/
class CPU <<Abstract>>
class CPU {
    +{field} n_core: int
    +{field} frequencies: CpuFrequency[]
    +{field} power_consumed_idle: float
    +{field} power_consumed_active: float

    +{method} insert_cpu_frequency(float, float, float): bool
    +{method} assign_cpu_frequency(Task): bool
    +{method} exec_idle(int): void
    +{method}{abstract} reassign_cpu_frequency(Task): bool
} 

CPU <|--- nonDVFS_CPU
CPU <|--- DVFS_CPU
CPU o-- CpuFrequency

class CpuFrequency{
    +{field} wcet_scale: float
    +{field} power_active: float
    +{field} power_idle: float
}

/'<Memory>'/
class Memories{
    +{field} list: Memory[]
    +{field} total_power_consumed_active: float
    +{field} total_power_consumed_idle: float

    +{method} insert_memory(): bool
    +{method} assign_memory(Task, int): bool
}

class Memory <<Abstract>>
class Memory{
    +{field} type
    +{field} capacity: int
    +{field} used_capacity: int
    +{field} power_active: double
    +{field} power_idle: double
    +{field} wcet_scale: double
}

Memory <|-- LPM
Memory <|-- DRAM
Memories o-- Memory


/'Task'/
class Task{
    +{field} no: int
    +{field} wcet: int
    +{field} period: int
    +{field} mem_req: int
    +{field} cpu: CPU
    +{field} cpu_frequency: CPUFrequency
    +{field} memory: Memory
    +{field} det: float
    +{field} det_remain: float
    +{field} period_start: int
    +{field} prev_exec_time: int

    +{method} calc_det(void): void
    +{method} exec_idle(int): void
    +{method} exec_active(int): void
}

System - Task


@enduml